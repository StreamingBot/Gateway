management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  metrics:
    tags:
      application: ${spring.application.name}
    enable:
      all: true 

# Keycloak configuratie
keycloak:
  auth-server-url: ${KEYCLOAK_INTERNAL_URL}/realms/${KEYCLOAK_REALM}
  realm: ${KEYCLOAK_REALM}
  resource: ${KEYCLOAK_CLIENT_ID}
  bearer-only: true

# Spring security oauth2 resource server configuratie
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
          jwk-set-uri: ${KEYCLOAK_INTERNAL_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
  redis:
    host: ${SPRING_DATA_REDIS_HOST}
    port: ${SPRING_DATA_REDIS_PORT}
    limit:
      max.requests: ${rate.limit.max.requests}
      burst.capacity: ${rate.limit.burst.capacity}
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
            key-resolver: "#{@userKeyResolver}"
      routes:
        - id: user-service
          uri: ${user.service.url}
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 4
                redis-rate-limiter.requestedTokens: 2
                key-resolver: "#{@userKeyResolver}"

        - id: discord-service
          uri: ${discord.service.url}
          predicates:
            - Path=/discord/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 4
                redis-rate-limiter.requestedTokens: 2
                key-resolver: "#{@userKeyResolver}"

        - id: auth-service
          uri: ${auth.service.url}
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 4
                redis-rate-limiter.requestedTokens: 2
                key-resolver: "#{@userKeyResolver}"

  data:
    redis:
      host: redis
      port: 6379

# Add logging configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.security: DEBUG


